{"version":3,"sources":["../../src/commands/init-project.js"],"names":["program","version","option","parse","process","argv","args","command","projectName","templateName","templateDirectory","join","__dirname","projectDirectory","cwd","readmeFile","packageJsonFile","existingPackageJson","existingReadme","Error","console","log","readFile","catch","then","readme","readJson","json","copy","packageJson","newPackageJson","Object","assign","name","writeJson","writeFile","exec"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;;;kBAEe,UAACA,OAAD,EAAa;;AAExBA,YAAQC,OAAR,CAAgB,OAAhB,EACKC,MADL,CACY,mBADZ,EACiC,gFADjC,EAEKC,KAFL,CAEWC,QAAQC,IAFnB;;AAIA,QAAIC,OAAON,QAAQM,IAAnB;AACA,QAAIC,UAAUD,KAAK,CAAL,CAAd;AACA,QAAIE,cAAcF,KAAK,CAAL,KAAW,EAA7B;AACA,QAAIG,eAAe,uBAAnB;;AAEA,QAAIC,oBAAoB,eAAKC,IAAL,CAAUC,SAAV,EAAqB,kBAArB,EAAyCH,YAAzC,CAAxB;AACA,QAAII,mBAAmBT,QAAQU,GAAR,EAAvB;AACA,QAAIC,aAAa,eAAKJ,IAAL,CAAUE,gBAAV,EAA4B,WAA5B,CAAjB;AACA,QAAIG,kBAAkB,eAAKL,IAAL,CAAUE,gBAAV,EAA4B,cAA5B,CAAtB;AACA,QAAII,sBAAsB,IAA1B;AACA,QAAIC,iBAAiB,IAArB;;AAEA,QAAIV,eAAe,IAAnB,EAAyB;AACrB,cAAM,IAAIW,KAAJ,CAAU,gCAAV,CAAN;AACH;;AAEDC,YAAQC,GAAR,CAAY,uBAAZ;;AAEA,sBAAGC,QAAH,CAAYP,UAAZ,EAAwBQ,KAAxB,CAA8B,YAAI;AAC9B,eAAO,IAAP;AACH,KAFD,EAEGC,IAFH,CAEQ,UAACC,MAAD,EAAY;AAChBP,yBAAiBO,MAAjB;AACA,eAAO,kBAAGC,QAAH,CAAYV,eAAZ,CAAP;AACH,KALD,EAKGO,KALH,CAKS,YAAM;AACX,eAAO,EAAP;AACH,KAPD,EAOGC,IAPH,CAOQ,UAACG,IAAD,EAAU;AACdV,8BAAsBU,IAAtB;AACA,eAAO,kBAAGC,IAAH,CAAQlB,iBAAR,EAA2BG,gBAA3B,CAAP;AACH,KAVD,EAUGW,IAVH,CAUQ,YAAM;AACVJ,gBAAQC,GAAR,CAAY,2BAAZ;AACA,eAAO,kBAAGK,QAAH,CAAYV,eAAZ,CAAP;AACH,KAbD,EAaGQ,IAbH,CAaQ,UAACK,WAAD,EAAiB;AACrB,YAAIC,iBAAiBC,OAAOC,MAAP,CAAc,EAAEC,MAAMzB,WAAR,EAAd,EAAqCqB,WAArC,EAAkDZ,mBAAlD,CAArB;;AAEAG,gBAAQC,GAAR,CAAY,wBAAZ;AACA,eAAO,kBAAGa,SAAH,CAAalB,eAAb,EAA8Bc,cAA9B,CAAP;AACH,KAlBD,EAkBGN,IAlBH,CAkBQ,YAAI;AACR,YAAIN,kBAAkB,IAAtB,EAA2B;AACvB,mBAAO,kBAAGiB,SAAH,CAAapB,UAAb,EAAyBG,cAAzB,CAAP;AACH;AACJ,KAtBD,EAsBGM,IAtBH,CAsBQ,YAAM;AACVJ,gBAAQC,GAAR,CAAY,+CAAZ;AACA,eAAO,iCAAae,IAAb,CAAkB,aAAlB,EAAiC,EAAEtB,KAAKD,gBAAP,EAAjC,CAAP;AACH,KAzBD,EAyBGW,IAzBH,CAyBQ,YAAM;AACVJ,gBAAQC,GAAR,CAAY,uDAAZ;AACH,KA3BD;AA6BH,C","file":"init-project.js","sourcesContent":["import fs from \"fs-extra\";\nimport path from \"path\";\nimport childProcess from \"child-process-es6-promise\";\n\nexport default (program) => {\n\n    program.version(\"0.0.1\")\n        .option(\"-t, --type [type]\", \"Type of project. Options are: 'babel' (default), 'system' (dispatcher system).\")\n        .parse(process.argv);\n\n    var args = program.args;\n    var command = args[0];\n    var projectName = args[1] || \"\";\n    var templateName = \"init-project-template\";\n\n    var templateDirectory = path.join(__dirname, \"../../templates/\", templateName);\n    var projectDirectory = process.cwd();\n    var readmeFile = path.join(projectDirectory, \"README.md\");\n    var packageJsonFile = path.join(projectDirectory, \"package.json\");\n    var existingPackageJson = null;\n    var existingReadme = null;\n\n    if (projectName == null) {\n        throw new Error(\"Please provide a project name.\");\n    }\n\n    console.log(\"Creating template....\");\n\n    fs.readFile(readmeFile).catch(()=>{\n        return null;\n    }).then((readme) => {\n        existingReadme = readme;\n        return fs.readJson(packageJsonFile)\n    }).catch(() => {\n        return {};\n    }).then((json) => {\n        existingPackageJson = json;\n        return fs.copy(templateDirectory, projectDirectory);\n    }).then(() => {\n        console.log(\"Modifying package.json...\");\n        return fs.readJson(packageJsonFile);\n    }).then((packageJson) => {\n        var newPackageJson = Object.assign({ name: projectName }, packageJson, existingPackageJson);\n\n        console.log(\"Saving package.json...\");\n        return fs.writeJson(packageJsonFile, newPackageJson);\n    }).then(()=>{\n        if (existingReadme != null){\n            return fs.writeFile(readmeFile, existingReadme);\n        }\n    }).then(() => {\n        console.log(\"Running npm for you, this may take a while...\");\n        return childProcess.exec(\"npm install\", { cwd: projectDirectory });\n    }).then(() => {\n        console.log(\"Locked and loaded, you are ready to go. Happy coding.\");\n    });\n\n}\n"]}