{"version":3,"sources":["../../src/commands/create-project.js"],"names":["fs","path","childProcess","templates","babel","system","program","version","option","parse","process","argv","args","command","projectName","type","templateName","templateDirectory","join","__dirname","projectDirectory","cwd","packageJsonFile","Error","console","log","copy","then","readJson","packageJson","name","writeJson","exec"],"mappings":";;;;;;AAAA;;IAAYA,E;;AACZ;;IAAYC,I;;AACZ;;IAAYC,Y;;;;AAEZ,IAAIC,YAAY;AACZC,WAAO,kBADK;AAEZC,YAAQ;AAFI,CAAhB;;kBAKe,UAACC,OAAD,EAAa;;AAExBA,YAAQC,OAAR,CAAgB,OAAhB,EACKC,MADL,CACY,mBADZ,EACiC,gFADjC,EAEKC,KAFL,CAEWC,QAAQC,IAFnB;;AAIA,QAAIC,OAAON,QAAQM,IAAnB;AACA,QAAIC,UAAUD,KAAK,CAAL,CAAd;AACA,QAAIE,cAAcF,KAAK,CAAL,CAAlB;AACA,QAAIG,OAAOT,QAAQS,IAAR,IAAgB,OAA3B;AACA,QAAIC,eAAeb,UAAUY,IAAV,KAAmBZ,UAAUC,KAAhD;;AAEA,QAAIa,oBAAoBhB,KAAKiB,IAAL,CAAUC,SAAV,EAAqB,kBAArB,EAAyCH,YAAzC,CAAxB;AACA,QAAII,mBAAmBnB,KAAKiB,IAAL,CAAUR,QAAQW,GAAR,EAAV,EAAyBP,WAAzB,CAAvB;AACA,QAAIQ,kBAAkBrB,KAAKiB,IAAL,CAAUE,gBAAV,EAA4B,cAA5B,CAAtB;;AAEA,QAAIN,eAAe,IAAnB,EAAyB;AACrB,cAAM,IAAIS,KAAJ,CAAU,gCAAV,CAAN;AACH;;AAEDC,YAAQC,GAAR,CAAY,uBAAZ;;AAEAzB,OAAG0B,IAAH,CAAQT,iBAAR,EAA2BG,gBAA3B,EAA6CO,IAA7C,CAAkD,YAAM;AACpDH,gBAAQC,GAAR,CAAY,2BAAZ;AACA,eAAOzB,GAAG4B,QAAH,CAAYN,eAAZ,CAAP;AACH,KAHD,EAGGK,IAHH,CAGQ,UAACE,WAAD,EAAiB;AACrBA,oBAAYC,IAAZ,GAAmBhB,WAAnB;AACAU,gBAAQC,GAAR,CAAY,wBAAZ;AACA,eAAOzB,GAAG+B,SAAH,CAAaT,eAAb,EAA8BO,WAA9B,CAAP;AACH,KAPD,EAOGF,IAPH,CAOQ,YAAM;AACVH,gBAAQC,GAAR,CAAY,+CAAZ;AACA,eAAOvB,aAAa8B,IAAb,CAAkB,aAAlB,EAAiC,EAAEX,KAAKD,gBAAP,EAAjC,CAAP;AACH,KAVD,EAUGO,IAVH,CAUQ,YAAI;AACRH,gBAAQC,GAAR,CAAY,uDAAZ;AACH,KAZD;AAcH,C","file":"create-project.js","sourcesContent":["import * as fs from \"fs-extra\";\nimport * as path from \"path\";\nimport * as childProcess from \"child-process-es6-promise\";\n\nvar templates = {\n    babel: \"project-template\",\n    system: \"system-project-template\"\n};\n\nexport default (program) => {\n\n    program.version(\"0.0.1\")\n        .option(\"-t, --type [type]\", \"Type of project. Options are: 'babel' (default), 'system' (dispatcher system).\")\n        .parse(process.argv);\n\n    var args = program.args;\n    var command = args[0];\n    var projectName = args[1];\n    var type = program.type || \"babel\"\n    var templateName = templates[type] || templates.babel;\n\n    var templateDirectory = path.join(__dirname, \"../../templates/\", templateName);\n    var projectDirectory = path.join(process.cwd(), projectName);\n    var packageJsonFile = path.join(projectDirectory, \"package.json\");\n\n    if (projectName == null) {\n        throw new Error(\"Please provide a project name.\");\n    }\n\n    console.log(\"Creating template....\");\n\n    fs.copy(templateDirectory, projectDirectory).then(() => {\n        console.log(\"Modifying package.json...\");\n        return fs.readJson(packageJsonFile);\n    }).then((packageJson) => {\n        packageJson.name = projectName;\n        console.log(\"Saving package.json...\");\n        return fs.writeJson(packageJsonFile, packageJson);\n    }).then(() => {\n        console.log(\"Running npm for you, this may take a while...\");\n        return childProcess.exec(\"npm install\", { cwd: projectDirectory });\n    }).then(()=>{\n        console.log(\"Locked and loaded, you are ready to go. Happy coding.\");\n    });\n\n}\n"]}